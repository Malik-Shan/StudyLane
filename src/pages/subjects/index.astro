---
export const prerender = false;
import {db,eq, Subjects,Courses} from 'astro:db';
import {getCollection,getEntry} from 'astro:content';
import {slugify} from '../../js/util';
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import StudentInfoTop from '../../components/StudentInfoTop.astro';
import SubjectCard from '../../components/SubjectCard.astro';
import {app} from '../../firebase/server';
import {getAuth} from 'firebase-admin/auth';

const auth = getAuth(app);

if(!Astro.cookies.has('session')){
	return Astro.redirect('/login');
}
const sessionCookie = Astro.cookies.get('session').value;
let decodedCookie;
try {
	decodedCookie = await auth.verifySessionCookie(sessionCookie);
}catch(err){
	Astro.cookies.set('session','', {expires : new Date(0)});
	return Astro.redirect('/login');
}
let user; 
try {
	user = await auth.getUser(decodedCookie.uid);
} catch(err){
	Astro.cookies.set('session','', {expires : new Date(0)});
	return Astro.redirect('/login');
}
const allSubjects = [];
const course = decodedCookie.courses[0].split('/');
const c_name = course[0];
const c_sem = course[1];
const data = (await db.select().from(Courses).where(eq(Courses.cid, c_name)))[0];
await Promise.all(
	data.data[c_sem].subjects.map(async (s) => {
		const sub_info = (await db.select().from(Subjects).where(eq(Subjects.id, s)))[0];
		allSubjects.push(sub_info);
	})
)
// const courseSubjects = await getEntry("subjects", `guide/bs-it/s1`);
// await Promise.all(
//	courseSubjects.data.subjects.map(async (s) => {
//		const r = await getEntry("subjects", `guide/info/${slugify(s)}`);
//		allSubjects.push(r);
//	}))
---
<DefaultLayout title='Subjects'>
	<section class='container mx-auto px-2 section-nav-pb pt-8 max-sm:pt-4'>

		<StudentInfoTop name={decodedCookie.name} course={decodedCookie.courses[0].split("/")[0].toUpperCase()} partname="Semester" part={decodedCookie.courses[0].split("/")[1]} today={['FE', "PF", "MZ"]} tomorrow={["IT", "IE", "QZ"]} />

		<div class='wrapper subjects w-full'>
				<!-- <a class='sub_card w-full bg-slate-300 p-4 py-16 rounded-md text-center font-bold transition-all border-2 text-xl' data-id={ind} -->
				<!-- 	href={`/subjects/${s.slug.split('/')[2]}`}><span class='sub_bg' style={`background-image:url('${s.data.image}'); background-image:cover; background-position:center;)`}></span>{s.data.title}</a> -->
			{
			allSubjects.map((s, ind) => (
				<SubjectCard index={ind} img={s.simg} name={s.name} sname={s.sname} ct='0' tt='50' assignments='10' />
			))
			}
		</div>
	</section>
</DefaultLayout>
<style is:global>
</style>
