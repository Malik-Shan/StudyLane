---
export const prerender = false;
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import {app} from '../../firebase/server';
import {getAuth} from 'firebase-admin/auth';
import StudentPaymentCard from '../../components/StudentPaymentCard.astro';
import NewFeePaymentEntry from '../../components/NewFeePaymentEntry.astro';

const auth = getAuth(app)

// pagination info
const url = new URL(Astro.request.url);
const pathname = url.pathname;
const currentPage = url.searchParams.get('page') === null ? (1) : (url.searchParams.get('page'));
const showItems = url.searchParams.get('show');

// Aut info here
if(!Astro.cookies.has('session')){
	return Astro.redirect('/login');
}
const sessionCookie = Astro.cookies.get('session').value;
let decodedCookie;
try {
	decodedCookie = await auth.verifySessionCookie(sessionCookie);
}catch(err){
	Astro.cookies.set('session','', {expires : new Date(0)});
	return Astro.redirect('/login');
}
if(!decodedCookie.admin){
	return Astro.redirect('/404')
}
let user; 
try {
	user = await auth.getUser(decodedCookie.uid);
} catch(err){
	Astro.cookies.set('session','', {expires : new Date(0)});
	return Astro.redirect('/login');
}
const appscript_url = import.meta.env.APPSCRIPT_URL;
const g_url = `${appscript_url}?page=${currentPage}&show=16`;
const res = await fetch(g_url);
const {data,pagination} = await res.json()
const pages = [];
for(let i=0;i<pagination.pages;i++){
	pages.push({
		href: `${pathname}?page=${i+1}`,
		page: i+1,
	})
}
const isSinglePaged = pages.length <= 1;
---
<DefaultLayout title={`Fees Payment P-${currentPage}`}>
	<section class='student-fees-section section-nav-pb container mx-auto pt-4 px-3'>
		<div class='input-section flex flex-row justify-between'>
			<div class='btnsArea'>
				<button onclick='newEntry.showModal()' class='addentry primaryBtn p-2 rounded-md border-2'><i class="fa-solid fa-plus mr-2"></i>New Entry</button>
			</div>
			<form>
				<input class='flex items-center h-full bg-slate-100 p-2 rounded-md border-slate-300 border-2' type='search' placeholder='Search Entry' required />
			</form>
		</div>

		<div class='pagination mt-2 flex flex-row justify-end'>
			<div class='wrapper bg-slate-200 border border-slate-300 p-1 rounded-lg flex flex-row gap-1'>
				{
				isSinglePaged ? ('') : (
						pages.map((p) => (
						<a href={p.href} class={`flex justify-center items-center w-full min-w-[35px] aspect-square ${currentPage == p.page ? 'secondaryBtn pointer-events-none' : 'lowSecondaryBtn text-secondary'} border-2 text-white rounded-lg text-lg`}>{p.page}</a>
					))
				)
				}
			</div>
		</div>

		<div class='student-cards mt-4 grid grid-cols-4 gap-4 max-xl:grid-cols-3 max-lg:grid-cols-2 max-sm:grid-cols-1'>
			{
			data.map((d) => (
				<StudentPaymentCard id={d.id} name={d.name} course={d.course} f_inst={d.first_inst} s_inst={d.sec_inst} t_inst={d.third_inst} fth_inst={d.fourth_inst} total_fee={d.total_fee} f_due={d.first_due} s_due={d.sec_due} t_due={d.third_due} fth_due={d.fourth_due} rowIndex={d.rowIndex} />
			))
			}
		</div>
		<NewFeePaymentEntry />

	</section>
</DefaultLayout>
