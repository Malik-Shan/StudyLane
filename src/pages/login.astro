---
import Layout from '../layouts/Layout.astro'
---
<Layout title='Login'>
	<section class=' loginFormSection grid grid-cols-12 grid-row-1'>
		<div class='loginFormWrapper col-start-1 col-end-6 row-span-1 bg-white flex justify-center items-center px-6 max-md:fixed max-md:inset-0'>
			<form class='max-w-[400px] flex flex-col gap-4 justify-center items-center'>
				<h2 class='text-5xl font-thin'>LOGIN</h2>
				<div class='inputGroup'>
					<label for='email'>Email</label>
					<input type='email' id='email' name='email' required />
				</div>

				<div class='inputGroup'>
					<label for='password'>Password</label>
					<div class='w-full passGroup relative'>
						<button id='showPass' type='button' data-hidden='true' class="group/password w-[30px] h-[30px] flex justify-center items-center absolute right-[15px] top-1/2 -translate-y-1/2 bg-slate-200 p-1 rounded-full hover:bg-slate-300"> <i class="fa-solid fa-eye group-data-[hidden='true']/password:hidden"></i> <i class="fa-solid fa-eye-slash group-data-[hidden='false']/password:hidden"></i> </button> 
						<input id='password' name='password' required minlength="6" class='w-full' type='password' />
					</div>
				</div>

				<button id='loginBtn' class='flex flex-row items-center justify-center w-full bg-primary p-2 rounded-md text-white text-lg hover:opacity-80 transition-opacity' type='submit'>Login <span id='indicator'
				class='hidden w-[20px] h-[20px] border-4 border-slate-200 border-r-sky-400 rounded-full ml-2 animate-spin'></span></button>
				<a href='#' class='text-primary underline'>Forgot Password?</a>
				<p class='text-secondary leading-tight'>Submit your information to admin to Signup for the student portal.</p>
			</form>
		</div>
		<div class='groundZero col-start-6 col-end-13 row-span-1'></div>
	</section>
</Layout>
<style>
.groundZero {
	background-image:url('/assests/images/official/groundZero.jpg');
	background-repeat:no-repeat;
	background-size:cover;
	background-position:30% 50%;
}
.inputGroup {
		@apply flex flex-col w-full;
	}
.inputGroup label {
		@apply text-lg font-medium;
}
	.inputGroup input {
		@apply rounded-md border border-slate-300 p-2 px-4;
}
	.inputGroup input:focus-visible {
		outline-color:var(--clr-secondary);
}
</style>
<script>
import {
	getAuth, inMemoryPersistence, signInWithEmailAndPassword,
} from "firebase/auth"
import { app } from "../firebase/client.js";


const auth = getAuth(app);
// This will prevent the browser from storing session data
auth.setPersistence(inMemoryPersistence);

const form = document.querySelector("form") as HTMLFormElement;
form.addEventListener("submit", async (e) => {
	const spinner = document.querySelector("#indicator") as HTMLSpanElement;
	spinner.style.display = "inline-block";
	e.preventDefault();
	const formData = new FormData(form);
	const email = formData.get("email")?.toString();
	const password = formData.get("password")?.toString();

	if (!email || !password) {
		return;
	}
	try {
		const userCredential = await signInWithEmailAndPassword(
			auth,
			email,
			password
		);
		const idToken = await userCredential.user.getIdToken();
		const response = await fetch("/api/auth/login", {
			method: "POST",
			headers: {
				Authorization: `Bearer ${idToken}`,
			},
		});

		if (response.redirected) {
			spinner.style.display = "none";
			window.location.assign(response.url);
		}
	} catch (error) {
		spinner.style.display = "none";
		console.error(error);
	}
});

const showPassBtn = document.querySelector("#showPass")
showPassBtn.addEventListener('click', () =>{
	const password = document.querySelector('#password');
	const isHidden = showPassBtn.getAttribute('data-hidden');
	if(isHidden === 'true'){
		password.setAttribute('type', 'text');
		showPassBtn.setAttribute('data-hidden', 'false');
	} else {
		password.setAttribute('type', 'password');
		showPassBtn.setAttribute('data-hidden', 'true');
	}
})
</script>
