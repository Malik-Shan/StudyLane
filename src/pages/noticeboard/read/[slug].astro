---
import DefaultLayout from "@layouts/DefaultLayout.astro";

import type {CollectionEntry} from 'astro:content';
import {Image} from 'astro:assets';
import { getCollection} from "astro:content";

interface Props{
	notice:CollectionEntry<'noticeboard'>
};

export async function getStaticPaths(){
	const noticeboardCollection = await getCollection('noticeboard');

	return noticeboardCollection.flatMap((notice:CollectionEntry<'noticeboard'>) => ({
		params:{slug: notice.slug},
		props:{notice},
	}));
}

const {notice} = Astro.props;
const { Content } = await notice.render();
---

<DefaultLayout title="Notice">
	<section class="blog container max-w-[1050px] p-2 py-8 px-8 max-md:p-0 mx-auto">

		<Image class='-mb-16 max-sm:-mb-16 w-full aspect-video object-cover rounded-md shadow-md border-2 border-white shadow-slate-400' src={notice.data.bannerImg.image as ImageMetadata} id="banner" width={850}  alt={notice.data.bannerImg.alt} />

		<div class='bg-white isolate mx-8 max-lg:mx-4 max-sm:mx-2 rounded-md p-4'>
			<h1 class='text-3xl mb-4 max-sm:mb-2 max-md:text-2xl max-sm:text-xl text-center font-bold'>{notice.data.title}</h1>
			<h3 class='text-center'><span class='inline-block max-md:text-sm max-sm:text-xs text-white bg-[--clr-secondary] p-1 px-4 rounded-md'>{new Date(notice.data.published).toLocaleDateString('en-PK',{ month:"long", day: "2-digit" , year:"numeric"})}</span></h3>
		</div>
		<article class='article p-8 max-lg:p-4 max-sm:p-2'>
			<Content />
		</article>
  </section>
</DefaultLayout>
<style is:global>
article p img{
	@apply border;
}
</style>
<style is:global>
table {
	margin: auto;
	width:100%;
	min-width: 300px;
	max-width: 100%;
	border-collapse: collapse;
}

table thead tr {
  border-top: none;
  background: #428bca;
  color: #fff;
}

table tr {
  border-top: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
  background-color: #f5f9fc;
}


table th {
  display: none;
}

table td {
  display: block;
}

table td:first-child {
  margin-top: .5em;
}

table td:last-child {
  margin-bottom: .5em;
}

table td:before {
  content: attr(data-th) ": ";
  font-weight: bold;
  width: 120px;
  display: inline-block;
  color: #000;
}

table th,
table td {
  text-align: left;
}

table {
  color: #333;
  border-radius: .4em;
  overflow: hidden;
}

table tr {
  border-color: #bfbfbf;
}

table th,
table td {
  padding: .5em 1em;
}
/*@media screen and (max-width: 601px) {*/
/*table tbody tr:nth-child(2) {*/
/*    border-top: none;*/
/*  }*/
/*}*/
table tbody tr:hover {
    background-color: #d8e7f3;
  }
 table td:before {
    display: none;
  }
 table th,
  table td {
    display: table-cell;
    padding: .25em .5em;
  }
  table th:first-child,
  table td:first-child {
    padding-left: 0;
  }
 table th:last-child,
table td:last-child {
    padding-right: 0;
  }
 table th,
  table td {
    padding: 1em !important;
  }
/*@media screen and (min-width: 600px) {*/
/*}*/
@media (prefers-color-scheme: dark) {
  .shiki,
  .shiki span {
    color: var(--shiki-dark) !important;
    background-color: var(--shiki-dark-bg) !important;
    /* Optional, if you also want font styles */
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }
}
html.dark .shiki,
html.dark .shiki span {
  color: var(--shiki-dark) !important;
  background-color: var(--shiki-dark-bg) !important;
  /* Optional, if you also want font styles */
  font-style: var(--shiki-dark-font-style) !important;
  font-weight: var(--shiki-dark-font-weight) !important;
  text-decoration: var(--shiki-dark-text-decoration) !important;
}
</style>
