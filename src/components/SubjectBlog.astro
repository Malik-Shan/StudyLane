---
const { title, link, subject, type, date } = Astro.props;
const givenDate = new Date(date);
const formatedDate = new Intl.DateTimeFormat("en-uk", {
  day: "numeric",
  month: "short",
  year: "2-digit",
})
  .format(givenDate)
  .replace(/ /g, "-");
---

<div class="blogTab relative group/assign">
  <p class="title">{title}</p>
  <div class="imp px-4">
    <span class="tag" data-type={`${type}`}>{type}</span>
    <span class="tag" data-subject={`${subject}`}>{subject}</span>
    {
      link !== "/" && (
        <a class="tag" data-type="link" href={link}>
          Link
        </a>
      )
    }
  </div>
  <p class="date">{formatedDate}</p>
</div>
<style is:global>
  .blogTab {
    display: grid;
    grid-template-columns: 1fr max-content 110px;
    @apply p-2 border border-slate-300 rounded-md items-center justify-center max-sm:grid-cols-1 max-sm:text-center max-sm:gap-2;
  }
  .blogTab.htmx-swapping {
    animation: disappear 400ms ease-out;
  }
  .tag[data-type="lecture"] {
    @apply bg-lime-400 text-lime-800 font-bold;
  }
  .tag[data-type="notes"] {
    @apply bg-yellow-400 text-yellow-800 font-bold;
  }
  .tag[data-type="blog"] {
    @apply bg-red-400 text-red-800 font-bold;
  }
  .tag[data-type="link"] {
    @apply bg-sky-300 text-sky-800 font-bold;
  }
  @keyframes disappear {
    0% {
      opacity: 1;
    }
    85% {
      opacity: 0;
    }
    100% {
      opacity: 0;
      display: none;
    }
  }
  .blogTab .title {
    @apply max-sm:text-sm;
  }
  .blogTab:hover {
    @apply bg-slate-100;
  }
  .blogTab .date {
    @apply border-l border-l-slate-300 px-2 max-sm:text-[.7rem] max-sm:font-bold max-sm:bg-slate-300 max-sm:rounded-sm text-center;
  }
</style>
